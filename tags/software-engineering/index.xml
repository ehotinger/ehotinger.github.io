<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software engineering on Eric Hotinger</title>
    <link>https://ehotinger.com/tags/software-engineering/</link>
    <description>Recent content in software engineering on Eric Hotinger</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 21 Jul 2024 09:28:22 -0700</lastBuildDate><atom:link href="https://ehotinger.com/tags/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>System Design Job Scheduler Cluster Management</title>
      <link>https://ehotinger.com/blog/system-design-job-scheduler-cluster-management/</link>
      <pubDate>Sun, 21 Jul 2024 09:28:22 -0700</pubDate>
      
      <guid>https://ehotinger.com/blog/system-design-job-scheduler-cluster-management/</guid>
      <description>System Design - Job Scheduler / Cluster Scheduling Design a cloud service where users can execute arbitrary jobs on a recurring schedule or manually.
Functional Requirements Users should be able to create/read/update/delete jobs and schedules A job is any arbitrary program/computation that a user writes. For example, I could write a program in Python that does print(&amp;quot;Hello World!&amp;quot;), or you could write one that downloads a file and uploads it into a blob storage service.</description>
    </item>
    
    <item>
      <title>Technical Program Manager (TPM) Example Interview Questions</title>
      <link>https://ehotinger.com/blog/technical-program-manager-example-interview-questions/</link>
      <pubDate>Mon, 01 Jul 2024 08:55:46 -0700</pubDate>
      
      <guid>https://ehotinger.com/blog/technical-program-manager-example-interview-questions/</guid>
      <description>Technical Program Manager (TPM) Example Interview Questions Below is a collection of various interview questions I&amp;rsquo;ve asked to TPMs in the past along with an example calibration guideline you can use.
Technical Problem Solving Can you give me an example where you had to dive deep into a problem and be hands on with the engineering team to figure out a solution to a problem? How would you run a project to upgrade users to a new version of an API?</description>
    </item>
    
    <item>
      <title>Engineers Must Own Quality</title>
      <link>https://ehotinger.com/blog/engineers-must-own-quality/</link>
      <pubDate>Sat, 08 Apr 2023 19:32:20 -0700</pubDate>
      
      <guid>https://ehotinger.com/blog/engineers-must-own-quality/</guid>
      <description>Why Quality &amp;amp; Assurance Teams are Not Enough: Engineers Must Take Responsibility Engineers must own the quality of the code that they write. Typical quality &amp;amp; assurance teams do not reinforce correct ownership.
As engineers, our job is to push for quality. We&amp;rsquo;re the only ones that are close enough to the code to understand the shortcuts we&amp;rsquo;re taking, what problems we&amp;rsquo;re creating for the future, and what issues may happen down the road as a result of our actions.</description>
    </item>
    
    <item>
      <title>The Most Important Software Documentation</title>
      <link>https://ehotinger.com/blog/the-most-important-software-documentation/</link>
      <pubDate>Tue, 17 Jan 2023 07:45:40 -0800</pubDate>
      
      <guid>https://ehotinger.com/blog/the-most-important-software-documentation/</guid>
      <description>The most important documentation in software engineering is the rationale behind architectural decisions and critical components. This rationale is should be discussed and recorded in a document via design meetings. The design document should contain architectural options which list off pros/cons. The document should have an opinion on the preferred approach and tell the reader why it is the preferred approach.
Ideally, the design discussions are also recorded and any feedback is persisted into the architectural design document.</description>
    </item>
    
  </channel>
</rss>
