<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Eric Hotinger</title>
    <link>https://ehotinger.github.io/blog/</link>
    <description>Recent content in Blog on Eric Hotinger</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 07 Jul 2018 00:00:00 -0700</lastBuildDate>
    
	<atom:link href="https://ehotinger.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing Go on Windows (including Make)</title>
      <link>https://ehotinger.github.io/blog/installing-go-windows/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 -0700</pubDate>
      
      <guid>https://ehotinger.github.io/blog/installing-go-windows/</guid>
      <description>This is an extremely brief guide to setting up Go on Windows. There are plenty of guides out there for setting up Go, but none that also include how to get your Makefiles working cross-platform easily. The easiest way I&amp;rsquo;ve found to do this is to change shells. This is especially true if you have Makefiles like I do, where $(shell) is everywhere. With the default shell you&amp;rsquo;ll end up with CREATE PROCESS(NULL, .</description>
    </item>
    
    <item>
      <title>Installing Hugo</title>
      <link>https://ehotinger.github.io/blog/installing-hugo/</link>
      <pubDate>Thu, 31 May 2018 12:02:45 -0700</pubDate>
      
      <guid>https://ehotinger.github.io/blog/installing-hugo/</guid>
      <description>This is a quick-start guide to setting up Hugo with GitHub pages, since it took too much effort to find the full instructions anywhere else. It should hopefully take you ~15 minutes to complete the entire thing.
 Make two GitHub repositories, i.e., https://github.com/ehotinger/blog and https://github.com/ehotinger/ehotinger.github.io - the first repository is for the unrendered Hugo content, and the second is for the rendered content. Note: you could just have one repository as your GitHub page, but this approach allows you to easily switch off GitHub pages if you want to.</description>
    </item>
    
  </channel>
</rss>